---
name: Create New Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  create_new_release:
    if: github.repository == 'IQEngine/WebFFT'
    permissions:
      contents: write
      pull-requests: write
      packages: write
    runs-on: ubuntu-latest
    environment:
      name: "WebFFT"
      url: https://webfft.com
    steps:
      - name: Checkout the repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          fetch-depth: 0

      - id: set_variables
        run: |
          # make the repository lowercase
          echo "repository=${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"
          # truncate sha to 11 characters
          echo "sha=${GITHUB_SHA::11}" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}

      - name: Draft a release
        id: draft_a_release
        uses: release-drafter/release-drafter@65c5fb495d1e69aa8c08a3317bc44ff8aabe9772 # v5.24.0
        with:
          config-name: release-drafter.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
        with:
          labels: |
            org.opencontainers.image.source=https://github.com/IQEngine/WebFFT
          push: true
          tags: |
            ghcr.io/${{ steps.set_variables.outputs.repository }}:${{ steps.set_variables.outputs.sha }}
            ghcr.io/${{ steps.set_variables.outputs.repository }}:${{ steps.draft_a_release.outputs.tag_name }}
            ghcr.io/${{ steps.set_variables.outputs.repository }}:latest
        env:
          NODE_ENV: production

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in with Azure with Service Principal
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"

      - name: Build and Deploy Site
        uses: azure/container-apps-deploy-action@900fbf4c695af15656553e442a65192e797b9dd2 # v1
        with:
          containerAppName: ${{ secrets.AZURE_CONTAINER_APP_NAME }}
          resourceGroup: ${{ secrets.AZURE_RESOURCEGROUP }}
          imageToDeploy: ghcr.io/${{ steps.set_variables.outputs.repository }}:${{ steps.set_variables.outputs.sha }}
